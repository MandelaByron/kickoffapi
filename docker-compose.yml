
services:
  db:
    image: postgres:14.3-alpine

    restart: always

    volumes:
      - postgres_data_main_update:/var/lib/postgresql/data

    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres


  redis:
    image: redis:latest


  web:
    build: .

    expose:
      - 8000

    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python3 manage.py load_json_data"

    volumes:
      - .:/app
      - ./letsencrypt:/etc/letsencrypt
      - static_volume:/app/static/

    env_file:
      - .env

    depends_on:
      - db
      - redis
    
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_SETTINGS_MODULE=backend.settings

  nginx:
    image: nginx:latest 

    depends_on:
      - web

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static/
      - /etc/letsencrypt:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    environment:
      - NGINX_HOST=api.kickoffdata.com
      - NGINX_PORT=80
      
  celery-beat:
    build: .

    command: ["celery", "-A", "backend", "beat", "-l", "INFO"]

    volumes:
      - .:/app

    depends_on:
      
      - db
      - redis

  celery-worker:
    build: .

    command: ["celery", "-A", "backend", "worker", "-l", "INFO"]

    volumes:
      - .:/app

    depends_on:
      
      - db
      - redis

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:rw
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nginx
volumes:
  static_volume:
  postgres_data_main_update:



